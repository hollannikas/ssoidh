buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'
apply plugin: 'idea'

bootRun {
  addResources = true
}

jar {
  baseName = 'ssoidh'
  version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-jersey')
  compile('org.glassfish.jersey.media:jersey-media-multipart:2.22.2')
	compile('org.projectlombok:lombok:1.16.6')
	compile('org.springframework.boot:spring-boot-starter-web')
  compile('org.hsqldb:hsqldb')
  compile('commons-io:commons-io:+')
  compile('org.springframework.boot:spring-boot-starter-data-mongodb')
  compile("org.springframework.boot:spring-boot-devtools")
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
  testCompile("org.assertj:assertj-core:1.7.0")
  testCompile('com.github.fakemongo:fongo:1.5.5')
  testCompile('com.lordofthejars:nosqlunit-mongodb:+')
  testCompile("org.springframework.boot:spring-boot-starter-test")
}



eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}

task stage {
  dependsOn build
}
